package com.project2.ism.Model;

import com.project2.ism.Model.Vendor.Vendor;
import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.time.LocalDateTime;

@Entity
@Table(name = "products",
        uniqueConstraints = {
                @UniqueConstraint(columnNames = "product_code")
        })
public class Product {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotBlank(message = "Product name must be at least 2 characters")
    @Size(min = 2, message = "Product name must be at least 2 characters")
    @Column(name = "product_name", nullable = false)
    private String productName;

    @Column(name = "product_code", nullable = false, unique = true, length = 50)
    private String productCode;

    @NotNull(message = "Please select a vendor")
    @ManyToOne( optional = false)
    @JoinColumn(name = "vendor_id", nullable = false)
    private Vendor vendor;

    @NotNull(message = "Please select a category")
    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "product_category_id", nullable = false)
    private ProductCategory productCategory;

    @NotBlank(message = "Model is required")
    @Size(min = 2, message = "Model is required")
    @Column(name = "model", nullable = false, length = 100)
    private String model;

    @NotBlank(message = "Brand is required")
    @Size(min = 2, message = "Brand is required")
    @Column(name = "brand", nullable = false, length = 100)
    private String brand;

    @Column(name = "description", columnDefinition = "TEXT")
    private String description;

    @Min(value = 0, message = "Warranty period must be 0 or more months")
    @Column(name = "warranty_period", nullable = false)
    private Integer warrantyPeriod;

    @NotNull(message = "Warranty type is required")
    @Column(name = "warranty_type", nullable = false)
    private String warrantyType;

    @NotBlank(message = "HSN must be 4-8 digits")
    @Pattern(regexp = "^[0-9]{4,8}$", message = "HSN must be 4-8 digits")
    @Column(name = "hsn", nullable = false, length = 8)
    private String hsn;

    @NotNull(message = "Status is required")
    @Column(name = "status", nullable = false)
    private Boolean status;

    @Min(value = 1, message = "Minimum order quantity must be at least 1")
    @Column(name = "min_order_quantity", nullable = false)
    private Integer minOrderQuantity;

    @Min(value = 1, message = "Maximum order quantity must be at least 1")
    @Column(name = "max_order_quantity", nullable = false)
    private Integer maxOrderQuantity;

    @Column(name = "remarks", columnDefinition = "TEXT")
    private String remarks;

    @CreationTimestamp
    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt;

    @UpdateTimestamp
    @Column(name = "updated_at", nullable = false)
    private LocalDateTime updatedAt;

    // Default constructor
    public Product() {}

    public Product(Long id, String productName, String productCode, Vendor vendor, ProductCategory productCategory, String model, String brand, String description, Integer warrantyPeriod, String warrantyType, String hsn, Boolean status, Integer minOrderQuantity, Integer maxOrderQuantity, String remarks, LocalDateTime createdAt, LocalDateTime updatedAt) {
        this.id = id;
        this.productName = productName;
        this.productCode = productCode;
        this.vendor = vendor;
        this.productCategory = productCategory;
        this.model = model;
        this.brand = brand;
        this.description = description;
        this.warrantyPeriod = warrantyPeriod;
        this.warrantyType = warrantyType;
        this.hsn = hsn;
        this.status = status;
        this.minOrderQuantity = minOrderQuantity;
        this.maxOrderQuantity = maxOrderQuantity;
        this.remarks = remarks;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }
// Getters and setters will be generated by IntelliJ

    public ProductCategory getProductCategory() {
        return productCategory;
    }

    public void setProductCategory(ProductCategory productCategory) {
        this.productCategory = productCategory;
    }

    public String getWarrantyType() {
        return warrantyType;
    }

    public void setWarrantyType(String warrantyType) {
        this.warrantyType = warrantyType;
    }

    public Boolean getStatus() {
        return status;
    }

    public void setStatus(Boolean status) {
        this.status = status;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public String getProductCode() {
        return productCode;
    }

    public void setProductCode(String productCode) {
        this.productCode = productCode;
    }

    public Vendor getVendor() {
        return vendor;
    }

    public void setVendor(Vendor vendor) {
        this.vendor = vendor;
    }

    public String getModel() {
        return model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Integer getWarrantyPeriod() {
        return warrantyPeriod;
    }

    public void setWarrantyPeriod(Integer warrantyPeriod) {
        this.warrantyPeriod = warrantyPeriod;
    }

    public String getHsn() {
        return hsn;
    }

    public void setHsn(String hsn) {
        this.hsn = hsn;
    }


    public Integer getMinOrderQuantity() {
        return minOrderQuantity;
    }

    public void setMinOrderQuantity(Integer minOrderQuantity) {
        this.minOrderQuantity = minOrderQuantity;
    }

    public Integer getMaxOrderQuantity() {
        return maxOrderQuantity;
    }

    public void setMaxOrderQuantity(Integer maxOrderQuantity) {
        this.maxOrderQuantity = maxOrderQuantity;
    }

    public String getRemarks() {
        return remarks;
    }

    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    // Custom validation method
    @PrePersist
    @PreUpdate
    private void validateOrderQuantities() {
        if (maxOrderQuantity != null && minOrderQuantity != null &&
                maxOrderQuantity < minOrderQuantity) {
            throw new IllegalArgumentException("Maximum order quantity cannot be less than minimum order quantity");
        }
    }


}